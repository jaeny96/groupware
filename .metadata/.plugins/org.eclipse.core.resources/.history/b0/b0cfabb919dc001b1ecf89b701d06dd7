package com.group.approval.dao;

import java.sql.Connection;
import java.sql.SQLException;

import com.group.approval.dto.Document;
import com.group.approval.exception.ModifyException;
import com.group.approval.exception.UpdateException;
import com.group.sql.MyConnection;

public class ProcessDocsDAOOracle implements ProcessDocsDAO {

	@Override
	public void updateApproval(Document d) throws UpdateException {
		// DB연결
		Connection con = null;
		try {
			con = MyConnection.getConnection();
			con.setAutoCommit(false);
			// System.out.println("success");
		} catch (SQLException e) {
			e.printStackTrace();
			throw new UpdateException(e.getMessage());
		}
		String updateApprovalSQL = "UPDATE approval SET ap_comment=?,ap_type=?,ap_date=SYSTIMESTAMP\r\n"
				+ "WHERE document_no=? and employee_id=?";
	}

	@Override
	public void updateAgreement(Document d) throws UpdateException {
		// DB연결
		Connection con = null;
		try {
			con = MyConnection.getConnection();
			con.setAutoCommit(false);
			// System.out.println("success");
		} catch (SQLException e) {
			e.printStackTrace();
			throw new UpdateException(e.getMessage());
		}
		String updateAgreementSQL = "UPDATE agreement SET ap_comment=?,ap_type=?,ap_date=SYSTIMESTAMP\r\n"
				+ "WHERE document_no=? and employee_id=?";
	}

	@Override
	// 참조자의 참조 승인 선택
	public void updateReference(Document d) throws UpdateException {
		// DB연결
		Connection con = null;
		try {
			con = MyConnection.getConnection();
			con.setAutoCommit(false);
			// System.out.println("success");
		} catch (SQLException e) {
			e.printStackTrace();
			throw new UpdateException(e.getMessage());
		}
		String updateReferenceSQL = "UPDATE reference SET ap_date=SYSTIMESTAMP WHERE document_no=? AND employee_id=?";
	}

	@Override
	// 모두 승인처리를 할 경우, 최종 상태를 '승인'으로
	public void documentAudmit(String document_no) throws ModifyException {
		// DB연결
		Connection con = null;
		try {
			con = MyConnection.getConnection();
			con.setAutoCommit(false);
			// System.out.println("success");
		} catch (SQLException e) {
			e.printStackTrace();
			throw new ModifyException(e.getMessage());
		}
		String documentAudmitSQL = "create or replace procedure AUDMIT(documentNo varchar2, EmployeeId varchar2)\r\n" + 
				"IS \r\n" + 
				"    cntAg1 number;\r\n" + 
				"    cntAg2 number;\r\n" + 
				"    \r\n" + 
				"    cntAp1 number;\r\n" + 
				"    cntAp2 number;\r\n" + 
				"BEGIN\r\n" + 
				"  Update approval set ap_type='승인' WHERE document_no=documentNo AND employee_id=EmployeeId;\r\n" + 
				"  commit;\r\n" + 
				"   SELECT count(*) into cntAg1 \r\n" + 
				"    FROM agreement \r\n" + 
				"    WHERE ap_type='승인' AND document_no=documentNo; /*문서 합의 승인개수 */\r\n" + 
				"\r\n" + 
				"    SELECT count(*) into cntAg2 \r\n" + 
				"    FROM agreement \r\n" + 
				"    WHERE document_no=documentNo;  /*문서 합의해야할 승인개수 */\r\n" + 
				"\r\n" + 
				"    SELECT count(*) into cntAp1 \r\n" + 
				"    FROM approval \r\n" + 
				"    WHERE ap_type='승인' AND document_no=documentNo; /* 문서 결재 승인개수 */\r\n" + 
				"\r\n" + 
				"    SELECT count(*) into cntAp2 \r\n" + 
				"    FROM approval \r\n" + 
				"    WHERE document_no=documentNo; /* 문서 결재해야할 승인개수 */\r\n" + 
				"\r\n" + 
				"    IF cntAg1=cntAg2 AND cntAp1=cntAp2 THEN\r\n" + 
				"        UPDATE document SET document_status='승인' WHERE document_no=documentNo; \r\n" + 
				"\r\n" + 
				"    END IF;   \r\n" + 
				"commit; \r\n" + 
				"END;\r\n" + 
				"/\r\n" + 
				"\r\n" + 
				"EXECUTE AUDMIT(? , ?)";
	}

	@Override
	// 한 명이라도 반려 할 경우, 최종 상태는 '반려'
	public void documentRefuse(String document_no) throws ModifyException {
		// DB연결
		Connection con = null;
		try {
			con = MyConnection.getConnection();
			con.setAutoCommit(false);
			// System.out.println("success");
		} catch (SQLException e) {
			e.printStackTrace();
			throw new ModifyException(e.getMessage());
		}

	}

}
