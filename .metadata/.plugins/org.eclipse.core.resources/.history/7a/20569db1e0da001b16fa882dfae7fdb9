package com.group.board.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import com.group.board.dto.Board;
import com.group.board.dto.BoardComment;
import com.group.sql.MyConnection;

public class BoardCommentDAOOracle implements BoardCommentDAO {
	public BoardCommentDAOOracle() throws Exception {
		Class.forName("oracle.jdbc.driver.OracleDriver");
		System.out.println("load success");
	}

	@Override
	public List<BoardComment> selectAll(String bd_no) {
		Connection con = null;
		try {
			con=MyConnection.getConnection();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		String selectAllSQL="SELECT *" + 
				"FROM boardcomment cm \r\n" + 
				"JOIN employee e ON cm.employee_id = e.employee_id\r\n" + 
				"JOIN board b ON cm.bd_no = b.bd_no\r\n" + 
				"WHERE b.bd_no='BD3'\r\n" + 
				"ORDER BY cm_no desc";
		return null;
	}

	@Override
	public void insert(BoardComment cm) {
		Connection con = null;
		try {
			con = MyConnection.getConnection();
		} catch (SQLException e) {
			e.printStackTrace();
		}

		String insertSQL = "INSERT INTO boardcomment "
				+ "(bd_no,cm_no,employee_id,cm_content) \r\n" 
				+ "VALUES(?,(SELECT NVL(MAX(cm_no), 0)+1 FROM boardcomment\r\n" + 
				"WHERE bd_no=?),?,?);";
		PreparedStatement pstmt = null;
		try {
			pstmt = con.prepareStatement(insertSQL);
			pstmt.setString(1,cm.getBd_no());
			pstmt.setString(2,cm.getBd_no());
			pstmt.setString(3, cm.getCm_writer().getEmployee_id());
			pstmt.setString(4, cm.getCm_content());
			pstmt.executeUpdate();

			System.out.println("게시글이 추가되었습니다.");
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			MyConnection.close(con, pstmt, null);
		}

	}

	@Override
	public void delete(BoardComment cm) {
		Connection con = null;
		try {
			con = MyConnection.getConnection();
		} catch (SQLException e) {
			e.printStackTrace();
		}

		String deleteSQL = "DELETE FROM boardcomment WHERE bd_no=? AND cm_no=?";
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			pstmt = con.prepareStatement(deleteSQL);
			pstmt.setString(1,cm.getBd_no());
			pstmt.setInt(2, cm.getCm_no());
			pstmt.executeUpdate();
			System.out.println("게시글을 삭제하였습니다.");

//			int rowcnt = pstmt.executeUpdate();
//			if (rowcnt == 1) {
//				System.out.println("게시글을 삭제하였습니다.");
//			} else {
//				// throw exception
//			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			MyConnection.close(con, pstmt, null);
		}
	}

}
